# -*- coding: utf-8 -*-
"""Student_Percentage(GRIP)

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/19PTmP4BqFVYYoo208mtY0diJyQnHwHht

# **Importing Libraries**
"""

import matplotlib.pyplot as plt
import seaborn as sns
import numpy as np
import pandas as pd

"""# **Importing the Dataset**"""

from google.colab import files
upload = files.upload()

#importing the file and reading
df = pd.read_csv('Student_Percentage (2).csv')
df.head()

df.isnull().sum()

"""# **Dataset** **Visualization**"""

sns.heatmap(df.corr())

hrs_stud = df['Hours']
perf_index = df["Scores"]

plt.bar(df['Hours'], df['Scores'])
plt.xlabel('Hours')
plt.ylabel('Scores')
plt.title('Hours vs Scores')
plt.show()

"""# **Data Pre-Processing**"""

X = df[['Hours']]

Y = df[['Scores']]

from sklearn.preprocessing import StandardScaler

std = StandardScaler()
std.fit_transform(X)

from sklearn.model_selection import train_test_split
X_train, X_test, Y_train, Y_test = train_test_split(X, Y, test_size=0.2, random_state = 0)

X_train.value_counts()

std.fit_transform(X_test)

std.fit_transform(X_train)

"""# **Model Training & Testing**"""

from sklearn.linear_model import LinearRegression

model = LinearRegression()

model = model.fit(X_train,Y_train)

Y_pred = model.predict(X_test)

from sklearn.metrics import r2_score

acc = r2_score(Y_test,Y_pred)

print("Accuracy of the Model",round(acc*100,2),"%")

"""**Output**"""

score = float(input("Enter the number of Hours Studied"))

student = model.predict([[score]])

print("The Score predicted is: ",student)